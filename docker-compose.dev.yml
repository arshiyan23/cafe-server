version: '3.8'

services:
  # Development application service
  cafe-server-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: cafe-server-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-cafe_server_dev}
      - DB_USER=${DB_USER:-cafe_user}
      - DB_PASSWORD=${DB_PASSWORD:-cafe_password}
      - DATABASE_URL=postgresql://${DB_USER:-cafe_user}:${DB_PASSWORD:-cafe_password}@postgres:5432/${DB_NAME:-cafe_server_dev}
    env_file:
      - .env
    volumes:
      # Mount source code for hot reloading
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      # Exclude node_modules from being mounted
      - /app/node_modules
    restart: unless-stopped
    networks:
      - cafe-network
    depends_on:
      postgres:
        condition: service_healthy
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database for development
  postgres:
    image: postgres:15-alpine
    container_name: cafe-postgres-dev
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-cafe_server_dev}
      POSTGRES_USER: ${DB_USER:-cafe_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-cafe_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=peer"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - cafe-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-cafe_user} -d ${DB_NAME:-cafe_server_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cafe-pgadmin-dev
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@cafe.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - cafe-network
    profiles:
      - pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  # Optional: LocalStack for local AWS services testing
  localstack:
    image: localstack/localstack:latest
    container_name: cafe-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "/tmp/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - cafe-network
    profiles:
      - localstack

networks:
  cafe-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
  localstack_data:
